/**
 *	A1 valid strings
 */
const alwaysA1Valid =
[
	{
		text: 		'A1',
		value: 		'A1',
		startCol: 	1,
		startRow: 	1,
		endCol: 	1,
		endRow: 	1,
		expectedError: /^Invalid A1 .+: "A1"$/,
	},
	{
		text: 		'Z9',
		value: 		'Z9',
		startCol: 	26,
		startRow: 	9,
		endCol: 	26,
		endRow: 	9,
		expectedError: /^Invalid A1 .+: "Z9"$/,
	},
	{
		text: 		'a1',
		value: 		'a1',
		startCol: 	1,
		startRow: 	1,
		endCol: 	1,
		endRow: 	1,
		expectedError: /^Invalid A1 .+: "a1"$/,
	},
	{
		text: 		'z9',
		value: 		'z9',
		startCol: 	26,
		startRow: 	9,
		endCol: 	26,
		endRow: 	9,
		expectedError: /^Invalid A1 .+: "z9"$/,
	},
	{
		text: 		'AA1',
		value: 		'AA1',
		startCol: 	27,
		startRow: 	1,
		endCol: 	27,
		endRow: 	1,
		expectedError: /^Invalid A1 .+: "AA1"$/,
	},
	{
		text: 		'Z99',
		value: 		'Z99',
		startCol: 	26,
		startRow: 	99,
		endCol: 	26,
		endRow: 	99,
		expectedError: /^Invalid A1 .+: "Z99"$/,
	},
	{
		text: 		'aa1',
		value: 		'aa1',
		startCol: 	27,
		startRow: 	1,
		endCol: 	27,
		endRow: 	1,
		expectedError: /^Invalid A1 .+: "aa1"$/,
	},
	{
		text: 		'z99',
		value: 		'z99',
		startCol: 	26,
		startRow: 	99,
		endCol: 	26,
		endRow: 	99,
		expectedError: /^Invalid A1 .+: "z99"$/,
	},
	{
		text: 		'A1:B2',
		value: 		'A1:B2',
		startCol: 	1,
		startRow: 	1,
		endCol: 	2,
		endRow: 	2,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'a1:b2',
		value: 		'a1:b2',
		startCol: 	1,
		startRow: 	1,
		endCol: 	2,
		endRow: 	2,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'A1:b2',
		value: 		'A1:b2',
		startCol: 	1,
		startRow: 	1,
		endCol: 	2,
		endRow: 	2,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'a1:B2',
		value: 		'a1:B2',
		startCol: 	1,
		startRow: 	1,
		endCol: 	2,
		endRow: 	2,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	// Non-standard A1
	{
		text: 		'C3:E5',
		value: 		'C3:E5',
		startCol: 	3,
		startRow: 	3,
		endCol: 	5,
		endRow: 	5,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'E3:C5',
		value: 		'E3:C5',
		startCol: 	3,
		startRow: 	3,
		endCol: 	5,
		endRow: 	5,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'E5:C3',
		value: 		'E5:C3',
		startCol: 	3,
		startRow: 	3,
		endCol: 	5,
		endRow: 	5,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	{
		text: 		'C5:E3',
		value: 		'C5:E3',
		startCol: 	3,
		startRow: 	3,
		endCol: 	5,
		endRow: 	5,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
	// Boundary values
	{
		text: 		'STRING1',
		value: 		'STRING1',
		startCol: 	235208487,
		startRow: 	1,
		endCol: 	235208487,
		endRow: 	1,
		expectedError: /^Invalid A1 .+: "STRING1"$/,
	},
	{
		text: 		'String123',
		value: 		'String123',
		startCol: 	235208487,
		startRow: 	123,
		endCol: 	235208487,
		endRow: 	123,
		expectedError: /^Invalid A1 .+: "String123"$/,
	},
	{
		text: 		'string1:strING25',
		value: 		'string1:strING25',
		startCol: 	235208487,
		startRow: 	1,
		endCol: 	235208487,
		endRow: 	25,
		expectedError: /^Invalid A1 .+: ".+"$/,
	},
];

module.exports = alwaysA1Valid;